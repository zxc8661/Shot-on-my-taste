openapi: 3.0.0
info:
  title: Genre API
  version: 1.0.0
paths:
  /api/admin/genre:
    post:
      summary: 장르 추가 (관리자)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenreRequest"
      responses:
        "201":
          description: 생성됨
        "400":
          description: "GENRE_EXIST, BAD_REQUEST"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "NOT_ADMIN"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/public/genres:
    get:
      summary: 장르 목록 조회
      responses:
        "200":
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GenreResponse"
        "400":
          description: "BAD_REQUEST"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/admin/genres/{genreId}:
    put:
      summary: 장르 수정 (관리자)
      security:
        - bearerAuth: []
      parameters:
        - name: genreId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenreRequest"
      responses:
        "200":
          description: 성공
        "400":
          description: "GENRE_EXIST, BAD_REQUEST"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "NOT_ADMIN"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NOT_FOUND_GENRE"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: 장르 삭제 (관리자)
      security:
        - bearerAuth: []
      parameters:
        - name: genreId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: 성공
        "401":
          description: "NOT_ADMIN"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NOT_FOUND_GENRE"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        statusCode:
          type: integer
        error:
          type: string
        message:
          type: string
    GenreRequest:
      type: object
      properties:
        name:
          type: string
    GenreResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        createAt:
          type: string
          format: date-time
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
